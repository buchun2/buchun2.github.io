<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git命令</title>
      <link href="/2025/03/09/Git%E5%91%BD%E4%BB%A4/"/>
      <url>/2025/03/09/Git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="初始"><a href="#初始" class="headerlink" title="初始"></a>初始</h1><h2 id="1-初始化Git仓库"><a href="#1-初始化Git仓库" class="headerlink" title="1. 初始化Git仓库"></a>1. 初始化Git仓库</h2><p>首先，确保你的Spring Boot项目已经被初始化为一个Git仓库。你可以在你的项目根目录下运行以下命令来初始化Git仓库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><h3 id="2-配置Git用户信息"><a href="#2-配置Git用户信息" class="headerlink" title="2. 配置Git用户信息"></a>2. 配置Git用户信息</h3><p>在提交代码到Git仓库之前，你需要配置你的用户信息。运行以下命令来设置你的用户名和邮箱：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --local user.name &quot;Administrator&quot;</span><br><span class="line">git config --local user.email &quot;gitlab_admin_a67709@example.com&quot;</span><br></pre></td></tr></table></figure><h3 id="3-添加文件到Git并提交"><a href="#3-添加文件到Git并提交" class="headerlink" title="3. 添加文件到Git并提交"></a>3. 添加文件到Git并提交</h3><p>将你的Spring Boot项目文件添加到Git仓库，并提交：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .git commit -m &quot;Initial commit&quot; </span><br></pre></td></tr></table></figure><h3 id="4-将本地仓库与远程仓库关联"><a href="#4-将本地仓库与远程仓库关联" class="headerlink" title="4. 将本地仓库与远程仓库关联"></a>4. 将本地仓库与远程仓库关联</h3><p>如果你已经有一个远程的Git仓库（例如在GitHub、GitLab或Bitbucket上），你可以将你的本地仓库与这个远程仓库关联起来。首先，你需要获取远程仓库的URL。然后，使用以下命令关联远程仓库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin  </span><br></pre></td></tr></table></figure><p>例如，如果你的仓库URL是<a href="http://192.168.128.151:8089/root/mytest.git%EF%BC%8C%E5%88%99%E5%91%BD%E4%BB%A4%E4%B8%BA%EF%BC%9A">http://192.168.128.151:8089/root/mytest.git，则命令为：</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin http://192.168.128.151:8089/root/mytest.git </span><br></pre></td></tr></table></figure><p>检查远程仓库，这将列出所有远程仓库及其URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v </span><br></pre></td></tr></table></figure><h3 id="5-推送到远程仓库"><a href="#5-推送到远程仓库" class="headerlink" title="5. 推送到远程仓库"></a>5. 推送到远程仓库</h3><p>将你的代码推送到远程仓库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h1 id="更新推送"><a href="#更新推送" class="headerlink" title="更新推送"></a>更新推送</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin http://192.168.128.151:8089/root/mytest.git</span><br><span class="line">git add .# 添加解决后的文件到暂存区</span><br><span class="line">git commit -m &quot;my 44444 commit&quot;# 提交解决后的更改</span><br><span class="line">git push -u origin master#推送更改</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DevOps环境搭建 </category>
          
          <category> Git命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-Tool-Suite创建spring-boot项目</title>
      <link href="/2025/03/09/Spring%20Tool%20Suite%E5%88%9B%E5%BB%BAspring%20boot%E9%A1%B9%E7%9B%AE/"/>
      <url>/2025/03/09/Spring%20Tool%20Suite%E5%88%9B%E5%BB%BAspring%20boot%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="首先创建maven项目"><a href="#首先创建maven项目" class="headerlink" title="首先创建maven项目"></a>首先创建maven项目</h1><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215145147288.png" alt="image-20250215145147288"></p><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215145241774.png" alt="image-20250215145241774"></p><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215150149057.png" alt="image-20250215150149057"></p><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215150218716.png" alt="image-20250215150218716"></p><h2 id="转换spring-boot项目"><a href="#转换spring-boot项目" class="headerlink" title="转换spring-boot项目"></a>转换spring-boot项目</h2><h3 id="创建控制器package"><a href="#创建控制器package" class="headerlink" title="创建控制器package"></a>创建控制器package</h3><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215150604333.png" alt="image-20250215150604333"></p><h3 id="创建控制器类"><a href="#创建控制器类" class="headerlink" title="创建控制器类"></a>创建控制器类</h3><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215150721777.png" alt="image-20250215150721777"></p><h3 id="修改测试代码"><a href="#修改测试代码" class="headerlink" title="修改测试代码"></a>修改测试代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package example.mytest.contraller;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class TestController &#123;</span><br><span class="line">    @GetMapping(&quot;/test&quot;)</span><br><span class="line">    public String test() &#123;</span><br><span class="line">        return &quot;Hello Jenkddd5555dins!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改App-java，用于运行web"><a href="#修改App-java，用于运行web" class="headerlink" title="修改App.java，用于运行web"></a>修改App.java，用于运行web</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class App &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(App.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建资源目录"><a href="#创建资源目录" class="headerlink" title="创建资源目录"></a>创建资源目录</h3><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215152021254.png" alt="image-20250215152021254"></p><h3 id="再创建application-properties"><a href="#再创建application-properties" class="headerlink" title="再创建application.properties"></a>再创建application.properties</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=test</span><br><span class="line">server.port=8080</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215152114371.png" alt="image-20250215152114371"></p><h3 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">       &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;3.0.5&lt;/version&gt;</span><br><span class="line">       &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">   &lt;/parent&gt;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">           &lt;scope&gt;mytest&lt;/scope&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line">       </span><br><span class="line">   </span><br></pre></td></tr></table></figure><h3 id="pom-xml右键maven-install"><a href="#pom-xml右键maven-install" class="headerlink" title="pom.xml右键maven install"></a>pom.xml右键maven install</h3><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215152701904.png" alt="image-20250215152701904"></p><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215152729247.png" alt="image-20250215152729247"></p><p><img src="/Post-Asset-Folder/Spring-Tool-Suite%E5%88%9B%E5%BB%BAspring-boot%E9%A1%B9%E7%9B%AE.assets/image-20250215164834492.png" alt="image-20250215164834492"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> DevOps环境搭建 </category>
          
          <category> 创建实例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> spring boot </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker gitlab</title>
      <link href="/2025/03/09/centos-docker-gitlab/"/>
      <url>/2025/03/09/centos-docker-gitlab/</url>
      
        <content type="html"><![CDATA[<h1 id="CI-CD（1）"><a href="#CI-CD（1）" class="headerlink" title="CI&#x2F;CD（1）"></a>CI&#x2F;CD（1）</h1><h1 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h1><h2 id="一、安装前准备"><a href="#一、安装前准备" class="headerlink" title="一、安装前准备"></a>一、安装前准备</h2><p>在安装Docker与Docker-Compose之前，需要先卸载CentOS上可能已经安装的旧版本的Docker。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><h2 id="二、安装Docker"><a href="#二、安装Docker" class="headerlink" title="二、安装Docker"></a>二、安装Docker</h2><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><p>在安装Docker之前，需要先安装一些依赖包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213164650474.png" alt="image-20250213164650474"></p><h3 id="换Docker源"><a href="#换Docker源" class="headerlink" title="换Docker源"></a>换Docker源</h3><p>换Docker源，以便能够下载并安装最新版本的Docker。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213164922229.png" alt="image-20250213164922229"></p><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>通过yum命令安装Docker。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213165139361.png" alt="image-20250213165139361"></p><h3 id="启动Docker服务"><a href="#启动Docker服务" class="headerlink" title="启动Docker服务"></a>启动Docker服务</h3><p>安装完成后，需要启动Docker服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="验证Docker是否安装成功"><a href="#验证Docker是否安装成功" class="headerlink" title="验证Docker是否安装成功"></a>验证Docker是否安装成功</h3><p>可以通过查看Docker版本的方式来验证Docker是否安装成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213165234663.png" alt="image-20250213165234663"></p><h2 id="三、安装指定版本的Docker"><a href="#三、安装指定版本的Docker" class="headerlink" title="三、安装指定版本的Docker"></a>三、安装指定版本的Docker</h2><p>如果需要安装指定版本的Docker，可以先查看yum源支持的Docker版本，然后通过指定版本号的方式来安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p>例如，要安装19.03.9版本的Docker，可以执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce-19.03.9 docker-ce-cli-19.03.9 containerd.io</span><br></pre></td></tr></table></figure><h2 id="四、安装Docker-Compose"><a href="#四、安装Docker-Compose" class="headerlink" title="四、安装Docker-Compose"></a>四、安装Docker-Compose</h2><p>Docker-Compose可以通过二进制安装的方式进行安装。首先需要下载对应版本的Docker-Compose二进制文件，并将其添加到系统路径中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 下载Docker-Compose二进制文件</span><br><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/v2.32.4/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"># 添加执行权限</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"># 验证安装是否成功</span><br><span class="line">docker-compose --version</span><br><span class="line"></span><br><span class="line">建立软连接</span><br><span class="line">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213165647049.png" alt="image-20250213165647049"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213165726482.png" alt="image-20250213165726482"></p><p>至此，CentOS系统下的Docker与Docker-Compose安装完成。接下来，就可以使用Docker和Docker-Compose来管理和部署容器化应用了。</p><h1 id="安装gitlab"><a href="#安装gitlab" class="headerlink" title="安装gitlab"></a>安装gitlab</h1><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213170511053.png" alt="image-20250213170511053"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213170526685.png" alt="image-20250213170526685"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# cd /usr/local</span><br><span class="line">[root@192 local]# mkdir docker</span><br><span class="line">[root@192 local]# cd  docker/</span><br><span class="line">[root@192 docker]# mkdir gitlab_docker</span><br><span class="line">[root@192 docker]# cd gitlab_docker/</span><br><span class="line">创建</span><br><span class="line">/usr/local/docker/gitlab_docker/docker-compose.yml</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213170823360.png" alt="image-20250213170823360"></p><h2 id="查询gitlab"><a href="#查询gitlab" class="headerlink" title="查询gitlab"></a>查询gitlab</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search gitlab</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213171159212.png" alt="image-20250213171159212"></p><h2 id="方法一：使用阿里云镜像加速（失败）-换以下镜像地址"><a href="#方法一：使用阿里云镜像加速（失败）-换以下镜像地址" class="headerlink" title="方法一：使用阿里云镜像加速（失败）,换以下镜像地址"></a>方法一：使用阿里云镜像加速（失败）,换以下镜像地址</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://docker.1ms.run&quot;,</span><br><span class="line">  &quot;https://hub.rat.dev&quot;,</span><br><span class="line">&quot;https://docker.1panel.live&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213193455496.png" alt="image-20250213193455496"></p><h2 id="方法二：创建阿里云容器镜像服务-md"><a href="#方法二：创建阿里云容器镜像服务-md" class="headerlink" title="方法二：创建阿里云容器镜像服务.md"></a>方法二：创建阿里云容器镜像服务.md</h2><p>DockerToAliRepo</p><h2 id="失败，直接看下面“原因”目录"><a href="#失败，直接看下面“原因”目录" class="headerlink" title="失败，直接看下面“原因”目录"></a>失败，直接看下面“原因”目录</h2><h2 id="配置docker-compose-yml"><a href="#配置docker-compose-yml" class="headerlink" title="配置docker-compose.yml"></a>配置docker-compose.yml</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">不需要版本号</span><br><span class="line">services:</span><br><span class="line">  gitlab:</span><br><span class="line">    image: &#x27;gitlab/gitlab-ce:latest&#x27;</span><br><span class="line">    container_name: gitlab</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">        GITLAB_OMNIBUS_CONFIG: |</span><br><span class="line">        external_url &#x27;http://192.168.128.151: 8929&#x27;</span><br><span class="line">        gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;]: 2224</span><br><span class="line">    ports:</span><br><span class="line">      - &#x27;8929:8929&#x27;</span><br><span class="line">      - &#x27;2224:2224&#x27;</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x27;./config:/etc/gitlab&#x27;</span><br><span class="line">      - &#x27;./logs:/var/log/gitlab&#x27;</span><br><span class="line">      - &#x27;./data:/var/opt/gitlab&#x27;</span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213204133508.png" alt="image-20250213204133508"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看运行日志</span><br><span class="line">docker-compose logs -f</span><br></pre></td></tr></table></figure><h2 id="主机访问不到http-192-168-128-151-8929"><a href="#主机访问不到http-192-168-128-151-8929" class="headerlink" title="主机访问不到http://192.168.128.151:8929/"></a>主机访问不到<a href="http://192.168.128.151:8929/">http://192.168.128.151:8929/</a></h2><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213224037112.png" alt="image-20250213224037112"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect  a2ff36851466 | grep Gateway</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213224141023.png" alt="image-20250213224141023"></p><h3 id="使用Docker的IP地址"><a href="#使用Docker的IP地址" class="headerlink" title="使用Docker的IP地址"></a>使用Docker的IP地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f &#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27; a2ff36851466</span><br><span class="line">curl http://172.18.0.2:8929</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213225135054.png" alt="image-20250213225135054"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213225843681.png" alt="image-20250213225843681"></p><h3 id="Docker的端口映射功能"><a href="#Docker的端口映射功能" class="headerlink" title="Docker的端口映射功能"></a>Docker的端口映射功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker port a2ff3685146</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250213225707019.png" alt="image-20250213225707019"></p><h3 id="换镜像试一下命令行"><a href="#换镜像试一下命令行" class="headerlink" title="换镜像试一下命令行"></a>换镜像试一下命令行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8929:8929 -p 8022:8022 \</span><br><span class="line">--restart always --name gitlab \</span><br><span class="line">-v /usr/local/docker/gitlab_docker/config:/etc/gitlab \</span><br><span class="line">-v /usr/local/docker/gitlab_docker/logs:/var/log/gitlab \</span><br><span class="line">-v /usr/local/docker/gitlab_docker/data:/var/opt/gitlab \</span><br><span class="line">--privileged=true gitlab/gitlab-ce</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214121014256.png" alt="image-20250214121014256"></p><h3 id="修改容器配置"><a href="#修改容器配置" class="headerlink" title="修改容器配置"></a>修改容器配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it bdb560dbd2c2  /bin/bash</span><br><span class="line">vi /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line">可以直接复制</span><br><span class="line">external_url &#x27;http://192.168.128.151:8929&#x27;</span><br><span class="line">gitlab_rails[&#x27;gitlab_ssh_host&#x27;] = &#x27;192.168.128.151&#x27;</span><br><span class="line">gitlab_rails[&#x27;gitlab_shell_ssh_port&#x27;] = 2224  #这个在比较远下面705行</span><br><span class="line"></span><br><span class="line">在命令模式下（按Esc键进入），输入:set number或:set nu，然后按Enter键</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214122834387.png" alt="image-20250214122834387"></p><h3 id="修改gitlab-yml"><a href="#修改gitlab-yml" class="headerlink" title="修改gitlab.yml"></a>修改gitlab.yml</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml</span><br><span class="line"></span><br><span class="line">host: 192.168.128.151</span><br><span class="line">port: 8929</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214130933080.png" alt="image-20250214130933080"></p><h3 id="重新启动gitlab服务"><a href="#重新启动gitlab服务" class="headerlink" title="重新启动gitlab服务"></a>重新启动gitlab服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214123125211.png" alt="image-20250214123125211"></p><h2 id="原因，一种解决办法"><a href="#原因，一种解决办法" class="headerlink" title="原因，一种解决办法"></a>原因，一种解决办法</h2><h3 id="使用命令行加-h-192-168-128-151"><a href="#使用命令行加-h-192-168-128-151" class="headerlink" title="使用命令行加-h 192.168.128.151"></a>使用命令行加-h 192.168.128.151</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-h 192.168.128.151 \</span><br><span class="line">-p 8089:8089 -p 8022:8022 \</span><br><span class="line">--restart always --name gitlab \</span><br><span class="line">-v /usr/local/docker/gitlab_docker/config:/etc/gitlab \</span><br><span class="line">-v /usr/local/docker/gitlab_docker/logs:/var/log/gitlab \</span><br><span class="line">-v /usr/local/docker/gitlab_docker/data:/var/opt/gitlab \</span><br><span class="line">--privileged=true gitlab/gitlab-ce</span><br></pre></td></tr></table></figure><p>映射端口-p 8089:8089 -p 8022:8022，需要修改vi &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb，vi &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;config&#x2F;gitlab.yml，</p><p>（最好使用默认80&#x2F;22， -p 8089:80 -p 8022:22），加 -h 192.168.128.151，gitlab-ctl restart重启还不行，<strong>需要退出停止删除容器docker stop xxxxxxx，docker container prune，然后再次启动</strong>，docker logs -f f5042f1ecb3c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[2025-02-14T07:19:43+00:00] INFO: templatesymlink[Create a gitlab.yml and create a symlink to Rails root] sending run action to execute[clear the gitlab-rails cache] (delayed)</span><br><span class="line">Recipe: gitlab::gitlab-rails</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214152355721.png" alt="image-20250214152355721"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214154920143.png" alt="image-20250214154920143"></p><h2 id="查看gitlab默认密码"><a href="#查看gitlab默认密码" class="headerlink" title="查看gitlab默认密码"></a>查看gitlab默认密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 78020ec6add9 /bin/bash</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214155050120.png" alt="image-20250214155050120"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root用户</span><br><span class="line">vi /etc/gitlab/initial_root_password</span><br><span class="line"></span><br><span class="line">50Bxv8sksGasgYgtOO0WvV9/GD8XFA7Y37wWfdFIVkg=</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214155124935.png" alt="image-20250214155124935"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214155227730.png" alt="image-20250214155227730"></p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">50Bxv8sksGasgYgtOO0WvV9/GD8XFA7Y37wWfdFIVkg=</span><br><span class="line"></span><br><span class="line">MYgit@lab132</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214160205635.png" alt="image-20250214160205635"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250214160231589.png" alt="image-20250214160231589"></p><h1 id="解决：docker-重启-挂起后端口又访问不到"><a href="#解决：docker-重启-挂起后端口又访问不到" class="headerlink" title="解决：docker 重启&#x2F;挂起后端口又访问不到"></a>解决：docker 重启&#x2F;挂起后端口又访问不到</h1><h3 id="排查原因："><a href="#排查原因：" class="headerlink" title="排查原因："></a>排查原因：</h3><h4 id="路由排查"><a href="#路由排查" class="headerlink" title="路由排查"></a>路由排查</h4><p>虚拟机挂起后少了两条路由，重启docker会重新添加，有时没有少路由还是不行**，不是这个原因**</p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250216151831276.png" alt="image-20250216151831276"></p><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250216152712573.png" alt="image-20250216152712573"></p><h4 id="查看docker-日志"><a href="#查看docker-日志" class="headerlink" title="查看docker 日志"></a>查看docker 日志</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tail -200f /var/log/messages</span><br><span class="line">sudo journalctl -u docker.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msg=&quot;Failed to clean iptables rules for bridge network: COMMAND_FAILED: &#x27;/usr/sbin/ip6tables-restore -w -n&#x27; failed: ip6tables-restore: line 2 failed\n&quot;</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="方法一：清理docker0"><a href="#方法一：清理docker0" class="headerlink" title="方法一：清理docker0"></a>方法一：清理docker0</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_43769253/article/details/127731123</span><br><span class="line">安装brctl</span><br><span class="line">yum install bridge-utils</span><br><span class="line"></span><br><span class="line">systemctl stop docker </span><br><span class="line">pkill docker</span><br><span class="line">iptables -t nat -F</span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> docker0 down</span><br><span class="line">brctl delbr docker0</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">systemctl stop docker <span class="comment"># 停止docker 服务</span></span><br><span class="line">pkill docker <span class="comment"># 杀掉docker进程</span></span><br><span class="line">iptables -t nat -F <span class="comment"># 清理iptables</span></span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> docker0 down <span class="comment"># 停止docker0网卡</span></span><br><span class="line">brctl delbr docker0 <span class="comment"># 删除docker0网卡--重点！</span></span><br><span class="line">systemctl start docker <span class="comment"># 启动docker服务</span></span><br><span class="line">docker start xxxxxxx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方法二：Docker-网络缓存问题"><a href="#方法二：Docker-网络缓存问题" class="headerlink" title="方法二：Docker 网络缓存问题"></a>方法二：Docker 网络缓存问题</h4><ul><li><strong>原因</strong>：Docker 的网络配置可能缓存了错误的状态，导致容器无法通过 <code>docker0</code> 桥接网络访问。</li><li><strong>清理 <code>docker0</code> 的作用</strong>：清理后，Docker 会重新初始化网络配置，清除缓存问题。</li><li><strong>解决方法</strong>：<br>清理 Docker 的网络缓存：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker network prune</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-docker-gitlab.assets/image-20250216142635401.png" alt="image-20250216142635401"></p><h4 id="方法三：docker0-网络配置损坏"><a href="#方法三：docker0-网络配置损坏" class="headerlink" title="方法三：docker0 网络配置损坏"></a>方法三：docker0 网络配置损坏</h4><ul><li><p><strong>原因</strong>：<code>docker0</code> 的配置可能在重启或某些操作后损坏，导致容器无法通过桥接网络与主机通信。</p></li><li><p><strong>清理 <code>docker0</code> 的作用</strong>：清理后，Docker 会重新生成 <code>docker0</code> 接口并恢复默认配置，修复网络连接。</p></li><li><p><strong>解决方法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>或者手动清理并重启 Docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip link delete docker0</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> DevOps环境搭建 </category>
          
          <category> gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> docker </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker jenkins</title>
      <link href="/2025/03/09/centos-docker-jenkins/"/>
      <url>/2025/03/09/centos-docker-jenkins/</url>
      
        <content type="html"><![CDATA[<h1 id="CI-CD（2）"><a href="#CI-CD（2）" class="headerlink" title="CI&#x2F;CD（2）"></a>CI&#x2F;CD（2）</h1><h2 id="一、克隆虚拟机"><a href="#一、克隆虚拟机" class="headerlink" title="一、克隆虚拟机"></a>一、克隆虚拟机</h2><h3 id="固定IP"><a href="#固定IP" class="headerlink" title="固定IP"></a>固定IP</h3><p>vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.128.152 </span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.128.2</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=8.8.4.4</span><br><span class="line"></span><br><span class="line">systemctl restart network  </span><br></pre></td></tr></table></figure><h3 id="下载jdk和maven"><a href="#下载jdk和maven" class="headerlink" title="下载jdk和maven"></a>下载jdk和maven</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-maven-3.9.9-bin.tar.gz -C /usr/local</span><br><span class="line">tar -zxvf jdk-21_linux-x64_bin.tar.gz -C /usr/local</span><br><span class="line"></span><br><span class="line">cd /usr/local</span><br><span class="line">mv jdk-21.0.6/ jdk/</span><br><span class="line">mv apache-maven-3.9.9/ maven/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-jenkins.assets/image-20250214164057420.png" alt="image-20250214164057420"></p><h3 id="设置maven私服-jdk-三处"><a href="#设置maven私服-jdk-三处" class="headerlink" title="设置maven私服&#x2F;jdk,三处"></a>设置maven私服&#x2F;jdk,三处</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">cd maven/conf/</span><br><span class="line">vi settings.xml</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">&lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">&lt;name&gt;public&lt;/name&gt;</span><br><span class="line">&lt;url&gt;https://maven.aliyun.com/repository/public/&lt;/url&gt;</span><br><span class="line">&lt;mirrorOf&gt;public&lt;/mirrorOf&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br><span class="line"></span><br><span class="line">    &lt;profiles&gt;</span><br><span class="line">        &lt;profile&gt;</span><br><span class="line">            &lt;id&gt;jdk-21&lt;/id&gt;</span><br><span class="line">            &lt;activation&gt;</span><br><span class="line">                &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">            &lt;/activation&gt;</span><br><span class="line">            &lt;properties&gt;</span><br><span class="line">                &lt;maven.compiler.source&gt;21&lt;/maven.compiler.source&gt;</span><br><span class="line">                &lt;maven.compiler.target&gt;21&lt;/maven.compiler.target&gt;</span><br><span class="line">            &lt;/properties&gt;</span><br><span class="line">        &lt;/profile&gt;</span><br><span class="line">    &lt;/profiles&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &lt;activeProfiles&gt;</span><br><span class="line">     &lt;activeProfile&gt;jdk-21&lt;/activeProfile&gt;</span><br><span class="line"> &lt;/activeProfiles&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos-jenkins.assets/image-20250214164938643.png" alt="image-20250214164938643"></p><p><img src="/Post-Asset-Folder/centos-jenkins.assets/image-20250214165838686.png" alt="image-20250214165838686"></p><p><img src="/Post-Asset-Folder/centos-jenkins.assets/image-20250214170116534.png" alt="image-20250214170116534"></p><h2 id="二、安装Docker"><a href="#二、安装Docker" class="headerlink" title="二、安装Docker"></a>二、安装Docker</h2><h3 id="参考centos-docker-gitlab-md"><a href="#参考centos-docker-gitlab-md" class="headerlink" title="参考centos-docker-gitlab.md"></a>参考centos-docker-gitlab.md</h3><p>docker-compose可直接移动到</p><p>mv docker-compose &#x2F;usr&#x2F;bin&#x2F;docker-compose</p><h2 id="三、安装Jenkins"><a href="#三、安装Jenkins" class="headerlink" title="三、安装Jenkins"></a>三、安装Jenkins</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.jenkins.io/download/</span><br><span class="line">docker pull jenkins/jenkins:2.492.1-lts</span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214175051050.png" alt="image-20250214175051050"></p><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker login --username=r_r_r_r crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com</span><br><span class="line"></span><br><span class="line">docker pull crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/jenkins:2.492.1-lts</span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214185849367.png" alt="image-20250214185849367"></p><h3 id="修改名字"><a href="#修改名字" class="headerlink" title="修改名字"></a>修改名字</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker tag crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/jenkins:2.492.1-lts jenkins:2.492.1-lts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker rmi crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/jenkins:2.492.1-lts</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214190524723.png" alt="image-20250214190524723"></p><h3 id="创建docker-compose-yml"><a href="#创建docker-compose-yml" class="headerlink" title="创建docker-compose.yml"></a>创建docker-compose.yml</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir docker</span><br><span class="line">cd docker/</span><br><span class="line">mkdir docker-jenkins</span><br><span class="line">cd docker-jenkins/</span><br><span class="line"></span><br><span class="line">#/usr/local/docker/docker-jenkins</span><br><span class="line">vi docker-compose.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214190750699.png" alt="image-20250214190750699"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">services:</span><br><span class="line">  jenkins:</span><br><span class="line">    image: &#x27;jenkins:2.492.1-lts&#x27;</span><br><span class="line">    container_name: jenkins</span><br><span class="line">    ports:</span><br><span class="line">      - &#x27;8080:8080&#x27;</span><br><span class="line">      - &#x27;50000:50000&#x27;</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x27;./data:/var/jenkins_home/&#x27;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">或者换命令方式</span><br><span class="line">docker run -d \</span><br><span class="line">-p 8080:8080 -p 50000:50000\</span><br><span class="line">--name jenkins \</span><br><span class="line">-v /usr/local/docker/docker-jenkins/data:/var/jenkins_home/ \</span><br><span class="line">jenkins:2.492.1-lts</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214191414880.png" alt="image-20250214191414880"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 data</span><br><span class="line">docker-compose restart</span><br><span class="line">docker-compose logs -f</span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214191707037.png" alt="image-20250214191707037"></p><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214191739761.png" alt="image-20250214191739761"></p><h3 id="拷贝密码出来"><a href="#拷贝密码出来" class="headerlink" title="拷贝密码出来"></a>拷贝密码出来</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">34e9194af98d496aa2dbc45aa7ca0146</span><br></pre></td></tr></table></figure><h3 id="访问http-192-168-128-152-8080"><a href="#访问http-192-168-128-152-8080" class="headerlink" title="访问http://192.168.128.152:8080/"></a>访问<a href="http://192.168.128.152:8080/">http://192.168.128.152:8080/</a></h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214193319337.png" alt="image-20250214193319337"></p><h3 id="选择插件来安装"><a href="#选择插件来安装" class="headerlink" title="选择插件来安装"></a>选择插件来安装</h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214193636355.png" alt="image-20250214193636355"></p><h3 id="比较慢，换源"><a href="#比较慢，换源" class="headerlink" title="比较慢，换源"></a>比较慢，换源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi hudson.model.UpdateCenter.xml</span><br><span class="line">换源</span><br><span class="line">http://mirror.esuni.jp/jenkins/updates/update-center.json</span><br><span class="line"></span><br><span class="line">重启</span><br><span class="line">docker-compose restart</span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214195245831.png" alt="image-20250214195614320"></p><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214195614320.png" alt="image-20250214195614320"></p><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214201203772.png" alt="image-20250214201203772"></p><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214201229864.png" alt="image-20250214201229864"></p><h3 id="另外安装插件"><a href="#另外安装插件" class="headerlink" title="另外安装插件"></a>另外安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Git Parameter</span><br><span class="line">publish over ssh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214201536979.png" alt="image-20250214201536979"></p><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214201737147.png" alt="image-20250214201737147"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="移动jdk-maven到-usr-local-docker-docker-jenkins-data"><a href="#移动jdk-maven到-usr-local-docker-docker-jenkins-data" class="headerlink" title="移动jdk&#x2F;maven到 &#x2F;usr&#x2F;local&#x2F;docker&#x2F;docker-jenkins&#x2F;data&#x2F;"></a>移动jdk&#x2F;maven到 &#x2F;usr&#x2F;local&#x2F;docker&#x2F;docker-jenkins&#x2F;data&#x2F;</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/docker/docker-jenkins/data/</span><br><span class="line">mv /usr/local/jdk ./jdk</span><br><span class="line">mv /usr/local/maven ./maven</span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214202536808.png" alt="image-20250214202536808"></p><h3 id="确认docker已经映射到该目录"><a href="#确认docker已经映射到该目录" class="headerlink" title="确认docker已经映射到该目录"></a>确认docker已经映射到该目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost data]# docker exec -it jenkins bash</span><br><span class="line">jenkins@b835cb0c9a28:/$ pwd</span><br><span class="line">/</span><br><span class="line">jenkins@b835cb0c9a28:/$ cd ~</span><br><span class="line">jenkins@b835cb0c9a28:~$ pwd</span><br><span class="line">/var/jenkins_home</span><br></pre></td></tr></table></figure><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214202908030.png" alt="image-20250214202908030"></p><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214202732821.png" alt="image-20250214202732821"></p><h3 id="配置jenkins-TOOL"><a href="#配置jenkins-TOOL" class="headerlink" title="配置jenkins TOOL"></a>配置jenkins TOOL</h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214203104829.png" alt="image-20250214203104829"></p><h3 id="选择jdk和maven目录"><a href="#选择jdk和maven目录" class="headerlink" title="选择jdk和maven目录"></a>选择jdk和maven目录</h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214203301065.png" alt="image-20250214203301065"></p><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214203440752.png" alt="image-20250214203440752"></p><h2 id="实现推送"><a href="#实现推送" class="headerlink" title="实现推送"></a>实现推送</h2><h3 id="系统配置publish-over-ssh-测试"><a href="#系统配置publish-over-ssh-测试" class="headerlink" title="系统配置publish over ssh 测试"></a>系统配置publish over ssh 测试</h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214204352398.png" alt="image-20250214204352398"></p><h3 id="高级-输入密码"><a href="#高级-输入密码" class="headerlink" title="高级-输入密码"></a>高级-输入密码</h3><p><img src="D:\MY-tool\云安全\搭建DevOps教程\centos-docker-jenkins.assets\image-20250214204035637.png" alt="image-20250214204035637"></p><h3 id="创建测试目录"><a href="#创建测试目录" class="headerlink" title="创建测试目录"></a>创建测试目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/test</span><br><span class="line">test cinfiguration 没有报错即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DevOps环境搭建 </category>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> docker </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos配置</title>
      <link href="/2025/03/09/centos%E5%AE%89%E8%A3%85/"/>
      <url>/2025/03/09/centos%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="centos安装"><a href="#centos安装" class="headerlink" title="centos安装"></a>centos安装</h1><h2 id="ip-addr-没有IP"><a href="#ip-addr-没有IP" class="headerlink" title="ip addr 没有IP"></a>ip addr 没有IP</h2><p>修改</p><p>#vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</p><p><strong>bootproto&#x3D;dhcp</strong></p><p><strong>onboot&#x3D;yes</strong></p><p>#systemctl restart network</p><p><img src="/Post-Asset-Folder/centos%E5%AE%89%E8%A3%85.assets/image-20250212154947256.png" alt="image-20250212154947256"></p><p>固定IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.128.152 </span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line"></span><br><span class="line">systemctl restart network  </span><br></pre></td></tr></table></figure><h2 id="Linux系统yum安装报错Cannot-find-a-valid-baseurl-for-repo"><a href="#Linux系统yum安装报错Cannot-find-a-valid-baseurl-for-repo" class="headerlink" title="Linux系统yum安装报错Cannot find a valid baseurl for repo"></a>Linux系统yum安装报错Cannot find a valid baseurl for repo</h2><p><img src="/Post-Asset-Folder/centos%E5%AE%89%E8%A3%85.assets/image-20250212155250650.png" alt="image-20250212155250650"></p><h4 id="更换阿里云源ok"><a href="#更换阿里云源ok" class="headerlink" title="更换阿里云源ok"></a>更换阿里云源ok</h4><p>vi &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo</p><p>baseurl&#x3D;<a href="http://mirrors.aliyun.com/centos/">http://mirrors.aliyun.com/centos/</a></p><p><img src="/Post-Asset-Folder/centos%E5%AE%89%E8%A3%85.assets/image-20250212160207098.png" alt="image-20250212160207098"></p><p>yum install vim</p><p><img src="/Post-Asset-Folder/centos%E5%AE%89%E8%A3%85.assets/image-20250212160327213.png" alt="image-20250212160327213"></p><p>yum install net-tools</p><h2 id="ssh开启"><a href="#ssh开启" class="headerlink" title="ssh开启"></a>ssh开启</h2><h3 id="1-安装OpenSSH服务器"><a href="#1-安装OpenSSH服务器" class="headerlink" title="1. 安装OpenSSH服务器"></a>1. 安装OpenSSH服务器</h3><p>首先，确保你的CentOS系统上已经安装了OpenSSH服务器。可以通过以下命令来安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install openssh-server -y</span><br></pre></td></tr></table></figure><h3 id="2-设置端口和允许root登录"><a href="#2-设置端口和允许root登录" class="headerlink" title="2.设置端口和允许root登录"></a>2.设置端口和允许root登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h3 id="3-启动SSH服务"><a href="#3-启动SSH服务" class="headerlink" title="3. 启动SSH服务"></a>3. 启动SSH服务</h3><p>安装完成后，你可以使用以下命令来启动SSH服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start sshd </span><br></pre></td></tr></table></figure><h3 id="4-设置SSH服务开机自启"><a href="#4-设置SSH服务开机自启" class="headerlink" title="4. 设置SSH服务开机自启"></a>4. 设置SSH服务开机自启</h3><p>为了确保每次系统启动时SSH服务都能自动启动，你需要设置它为开机自启：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable sshd</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/centos%E5%AE%89%E8%A3%85.assets/image-20250212161906652.png" alt="image-20250212161906652"></p>]]></content>
      
      
      <categories>
          
          <category> DevOps环境搭建 </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker安全利用</title>
      <link href="/2025/03/09/docker%E5%AE%89%E5%85%A8/"/>
      <url>/2025/03/09/docker%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="docker安全"><a href="#docker安全" class="headerlink" title="docker安全"></a>docker安全</h1><h2 id="当前环境是不是容器环境"><a href="#当前环境是不是容器环境" class="headerlink" title="当前环境是不是容器环境"></a>当前环境是不是容器环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/1/cgroup | grep -qi docker &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Is Docker&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not Docker&quot;</span></span><br></pre></td></tr></table></figure><h3 id="容器逃逸介绍"><a href="#容器逃逸介绍" class="headerlink" title="容器逃逸介绍"></a>容器逃逸介绍</h3><p>在开始之前对于容器逃逸主要有以下三种方法：</p><ol><li>不安全的配置</li><li>相关程序漏洞</li><li>内核漏洞</li></ol><h2 id="0x01-不安全的配置"><a href="#0x01-不安全的配置" class="headerlink" title="0x01 不安全的配置"></a>0x01 不安全的配置</h2><h3 id="1、特权模式"><a href="#1、特权模式" class="headerlink" title="#1、特权模式"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_1%E3%80%81%E7%89%B9%E6%9D%83%E6%A8%A1%E5%BC%8F">#</a>1、特权模式</h3><p>执行以下命令，如果返回 Is privileged mode 则说明当前是特权模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/self/status | grep -qi <span class="string">&quot;0000003fffffffff&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Is privileged mode&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not privileged mode&quot;</span></span><br></pre></td></tr></table></figure><p>1</p><p>如果返回 Not privileged mode 则说明当前不是特权模式</p><h3 id="2、挂载-Docker-Socket"><a href="#2、挂载-Docker-Socket" class="headerlink" title="#2、挂载 Docker Socket"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_2%E3%80%81%E6%8C%82%E8%BD%BD-docker-socket">#</a>2、挂载 Docker Socket</h3><p>执行以下命令，如果返回 Docker Socket is mounted. 说明当前挂载了 Docker Socket</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /var/run/ | grep -qi docker.sock &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Docker Socket is mounted.&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Docker Socket is not mounted.&quot;</span></span><br></pre></td></tr></table></figure><p>1</p><p>如果返回 Docker Socket is not mounted. 则说明没有挂载</p><h3 id="3、挂载-procfs"><a href="#3、挂载-procfs" class="headerlink" title="#3、挂载 procfs"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_3%E3%80%81%E6%8C%82%E8%BD%BD-procfs">#</a>3、挂载 procfs</h3><p>执行以下命令，如果返回 Procfs is mounted. 说明当前挂载了 procfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name core_pattern 2&gt;/dev/null | <span class="built_in">wc</span> -l | grep -q 2 &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Procfs is mounted.&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Procfs is not mounted.&quot;</span></span><br></pre></td></tr></table></figure><p>1</p><p>如果返回 Procfs is not mounted. 则说明没有挂载</p><h3 id="4、挂载宿主机根目录"><a href="#4、挂载宿主机根目录" class="headerlink" title="#4、挂载宿主机根目录"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_4%E3%80%81%E6%8C%82%E8%BD%BD%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%A0%B9%E7%9B%AE%E5%BD%95">#</a>4、挂载宿主机根目录</h3><p>执行以下命令，如果返回 Root directory is mounted. 则说明宿主机目录被挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name passwd 2&gt;/dev/null | grep /etc/passwd | <span class="built_in">wc</span> -l | grep -q 7 &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Root directory is mounted.&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Root directory is not mounted.&quot;</span></span><br></pre></td></tr></table></figure><p>1</p><p>如果返回 Root directory is not mounted. 则说明没有挂载</p><h3 id="5、Docker-remote-api-未授权访问"><a href="#5、Docker-remote-api-未授权访问" class="headerlink" title="#5、Docker remote api 未授权访问"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_5%E3%80%81docker-remote-api-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE">#</a>5、Docker remote api 未授权访问</h3><p>执行以下命令，如果返回 Docker Remote API Is Enabled. 说明目标存在 Docker remote api 未授权访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IP=`hostname -i | awk -F. <span class="string">&#x27;&#123;print $1 &quot;.&quot; $2 &quot;.&quot; $3 &quot;.1&quot;&#125;&#x27;</span> ` &amp;&amp; <span class="built_in">timeout</span> 3 bash -c <span class="string">&quot;echo &gt;/dev/tcp/<span class="variable">$IP</span>/2375&quot;</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Docker Remote API Is Enabled.&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Docker Remote API is Closed.&quot;</span></span><br></pre></td></tr></table></figure><p>1</p><p>如果返回 Docker Remote API is Closed. 则表示目标不存在 Docker remote api 未授权访问</p><h2 id="0x02-内核漏洞"><a href="#0x02-内核漏洞" class="headerlink" title="#0x02 内核漏洞"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_0x02-%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9E">#</a>0x02 内核漏洞</h2><h3 id="1、CVE-2016-5195-DirtyCow-逃逸"><a href="#1、CVE-2016-5195-DirtyCow-逃逸" class="headerlink" title="#1、CVE-2016-5195 DirtyCow 逃逸"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_1%E3%80%81cve-2016-5195-dirtycow-%E9%80%83%E9%80%B8">#</a>1、CVE-2016-5195 DirtyCow 逃逸</h3><p>执行 uname -r 命令，如果在 2.6.22 &lt;&#x3D; 版本 &lt;&#x3D; 4.8.3 之间说明可能存在 CVE-2016-5195 DirtyCow 漏洞。</p><h3 id="2、CVE-2020-14386"><a href="#2、CVE-2020-14386" class="headerlink" title="#2、CVE-2020-14386"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_2%E3%80%81cve-2020-14386">#</a>2、CVE-2020-14386</h3><p>执行 uname -r 命令，如果在 4.6 &lt;&#x3D; 版本 &lt; 5.9 之间说明可能存在 CVE-2020-14386 漏洞。</p><h3 id="3、CVE-2022-0847-DirtyPipe-逃逸"><a href="#3、CVE-2022-0847-DirtyPipe-逃逸" class="headerlink" title="#3、CVE-2022-0847 DirtyPipe 逃逸"></a><a href="https://wiki.teamssix.com/CloudNative/Docker/container-escape-check.html#_3%E3%80%81cve-2022-0847-dirtypipe-%E9%80%83%E9%80%B8">#</a>3、CVE-2022-0847 DirtyPipe 逃逸</h3><p>执行 uname -r 命令，如果在 5.8 &lt;&#x3D; 版本 &lt; 5.10.102 &lt; 版本 &lt; 5.15.25 &lt; 版本 &lt; 5.16.11 之间说明可能存在 CVE-2022-0847 DirtyPipe 漏洞</p><h2 id="容器逃逸检测脚本"><a href="#容器逃逸检测脚本" class="headerlink" title="容器逃逸检测脚本"></a>容器逃逸检测脚本</h2><p>项目地址：<a href="https://github.com/teamssix/container-escape-check">https://github.com/teamssix/container-escape-check</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/teamssix/container-escape-check.git</span><br><span class="line"><span class="built_in">cd</span> container-escape-check</span><br><span class="line"><span class="built_in">chmod</span> +x container-escape-check.sh</span><br><span class="line">./container-escape-check.sh</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/docker%E5%AE%89%E5%85%A8.assets/image-20250109225203957.png" alt="image-20250109225203957"></p><p><img src="/Post-Asset-Folder/docker%E5%AE%89%E5%85%A8.assets/image-20250109225232265.png" alt="image-20250109225232265"></p>]]></content>
      
      
      <categories>
          
          <category> 云安全 </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> shell </tag>
            
            <tag> 漏洞检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python语句</title>
      <link href="/2025/03/09/python%E8%AF%AD%E5%8F%A5/"/>
      <url>/2025/03/09/python%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="改源命令行临时使用："><a href="#改源命令行临时使用：" class="headerlink" title="改源命令行临时使用："></a>改源命令行临时使用：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install xxxx -i https://pypi.tuna.tsinghua.edu.cn/simple </span><br><span class="line"></span><br><span class="line">pip3 install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python38\pip\pip.ini</span><br><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h2 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os.system(&#x27;netstat -an | find &quot;:443&quot; | find &quot;ESTABLISHED&quot;&#x27;)</span><br><span class="line">获取命令结果</span><br><span class="line">info=os.popen(&#x27;netstat -an | find &quot;:443&quot; | find &quot;ESTABLISHED&quot;&#x27;).readlines()</span><br></pre></td></tr></table></figure><h2 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f1 = open(&quot;num.txt&quot;,&quot;r&quot;,encoding=&#x27;UTF-8&#x27;)</span><br><span class="line">lines = f1.readlines()#读取全部内容</span><br><span class="line">lines = [line.rstrip() for line in lines if line.strip()] #去掉空行</span><br><span class="line">#lines = [line.rstrip(&#x27;\n&#x27;) for line in lines] #去掉换行符</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="启动http服务"><a href="#启动http服务" class="headerlink" title="启动http服务"></a>启动http服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 44444</span><br><span class="line"></span><br><span class="line">后台运行：</span><br><span class="line">nohup python3 -m http.server 8000 &amp;</span><br></pre></td></tr></table></figure><h3 id="启动FTP服务"><a href="#启动FTP服务" class="headerlink" title="启动FTP服务"></a>启动FTP服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FTP进入指定目录</span><br><span class="line">python3 -m pyftpdlib -p 2121</span><br><span class="line"></span><br><span class="line">ftp://xxx.xxx.xxx.xxx:2121</span><br></pre></td></tr></table></figure><h2 id="获取目录文件"><a href="#获取目录文件" class="headerlink" title="获取目录文件"></a>获取目录文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#当前程序目录</span><br><span class="line">current_dir = os.path.dirname(os.path.abspath(sys.argv[0]))</span><br><span class="line">#目录</span><br><span class="line">dirname =os.path.dirname(path)</span><br><span class="line">#文件名</span><br><span class="line">dirname2=os.path.basename(path)</span><br><span class="line">#后缀</span><br><span class="line">src_item.split(&quot;.&quot;)[-1]</span><br></pre></td></tr></table></figure><p>获取目录或文件全路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">def get_file_paths(directory):</span><br><span class="line">    file_paths = []</span><br><span class="line">    for root, dirs, files in os.walk(directory):</span><br><span class="line">        for file in dirs:</span><br><span class="line">            file_path = os.path.join(root, file)</span><br><span class="line">            file_paths.append(file_path)</span><br><span class="line">    return file_paths</span><br><span class="line">    </span><br><span class="line">if __name__ == &quot;__main__&quot;:   </span><br><span class="line">for file_path in get_file_paths(r&quot;D:\123&quot;):</span><br><span class="line">    print(file_path)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="python接收输入参数"><a href="#python接收输入参数" class="headerlink" title="python接收输入参数"></a>python接收输入参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src_dir = &#x27;&#x27;.join(sys.argv[1:])</span><br></pre></td></tr></table></figure><p>  传递参数</p><pre><code>  if len(sys.argv) != 4:        print(&quot;Usage: python script.py input_file output_file num_processes&quot;)        sys.exit(1)input_file, output_file, num_processes = sys.argv[1], sys.argv[2], int(sys.argv[3])</code></pre><h2 id="字符串截取最后斜杠之前"><a href="#字符串截取最后斜杠之前" class="headerlink" title="字符串截取最后斜杠之前"></a>字符串截取最后斜杠之前</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parts=s.rsplit(&#x27;/&#x27;, 1)</span><br><span class="line">return parts[0] if len(parts) &gt; 1 else s</span><br></pre></td></tr></table></figure><h2 id="去掉相同部分字符"><a href="#去掉相同部分字符" class="headerlink" title="去掉相同部分字符"></a>去掉相同部分字符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str1 = r&quot;F:\123teh&quot;</span><br><span class="line">str2 = r&quot;F:\123teh\result-9390\hkRGaUQi0IiFMq1ugnOc\wwwwww.txt   &quot;</span><br><span class="line">xored_str=str2.replace(str1, &quot;&quot;)</span><br><span class="line">替换反斜杠</span><br><span class="line">xored_str2=xored_str.replace(&quot;\\&quot;, &quot;/&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def get_last_colon_before(s):</span><br><span class="line">    index = s.rfind(&#x27;\\&#x27;)  # 获取最后一个点号的索引</span><br><span class="line">    if index != -1:</span><br><span class="line">        return s[:index]  # 返回点前的部分</span><br><span class="line">    else:</span><br><span class="line">        return s  # 如果没有点号，返回原字符串</span><br><span class="line"></span><br><span class="line">parts=get_last_colon_before(path)</span><br></pre></td></tr></table></figure><h2 id="分块读文件"><a href="#分块读文件" class="headerlink" title="分块读文件"></a>分块读文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def file_size(input_file_path):</span><br><span class="line">    chunk_size = 16 * 1024  # 16 KB</span><br><span class="line">    num=0</span><br><span class="line">    with open(input_file_path, &#x27;rb&#x27;) as infile:</span><br><span class="line">        while True:</span><br><span class="line">            chunk = infile.read(chunk_size)</span><br><span class="line">            num+=1</span><br><span class="line">            if not chunk:</span><br><span class="line">                break</span><br><span class="line">            print(num)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins-CI</title>
      <link href="/2025/03/09/jenkins-CI/"/>
      <url>/2025/03/09/jenkins-CI/</url>
      
        <content type="html"><![CDATA[<h1 id="CI-CD（3）"><a href="#CI-CD（3）" class="headerlink" title="CI&#x2F;CD（3）"></a>CI&#x2F;CD（3）</h1><h1 id="IDEA创建一个spring-boot测试项目"><a href="#IDEA创建一个spring-boot测试项目" class="headerlink" title="IDEA创建一个spring boot测试项目"></a>IDEA创建一个spring boot测试项目</h1><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214231807453.png" alt="image-20250214231807453"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214215901428.png" alt="image-20250214215901428"></p><h2 id="设置maven"><a href="#设置maven" class="headerlink" title="设置maven"></a>设置maven</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214220807952.png" alt="image-20250214220807952"></p><h2 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h2><p>controller.TestController</p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214220738970.png" alt="image-20250214220738970"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package com.example.mytest.controller;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line"></span><br><span class="line">public class TestController &#123;</span><br><span class="line">    </span><br><span class="line">    @GetMapping(&quot;/test&quot;)</span><br><span class="line">    public String test() &#123;</span><br><span class="line">        return &quot;Hello Jenkins!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>报错 java: 程序包org.springframework.boot.test.context不存在，文件-设置</p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214230446927.png" alt="image-20250214230446927"></p><h2 id="成功访问"><a href="#成功访问" class="headerlink" title="成功访问"></a>成功访问</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214232204042.png" alt="image-20250214232204042"></p><h1 id="gitlab创建项目"><a href="#gitlab创建项目" class="headerlink" title="gitlab创建项目"></a>gitlab创建项目</h1><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214232358039.png" alt="image-20250214232358039"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214232453506.png" alt="image-20250214232453506"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214232700278.png" alt="image-20250214232700278"></p><h2 id="设置git"><a href="#设置git" class="headerlink" title="设置git"></a>设置git</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214232758856.png" alt="image-20250214232758856"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --local user.name &quot;Administrator&quot;</span><br><span class="line">git config --local user.email &quot;gitlab_admin_a67709@example.com&quot;</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214232848060.png" alt="image-20250214232848060"></p><h3 id="commit"><a href="#commit" class="headerlink" title="commit!"></a>commit!</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">first commit!</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214233510098.png" alt="image-20250214233510098"></p><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git  clone"></a>git  clone</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214233638777.png" alt="image-20250214233638777"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214233806990.png" alt="image-20250214233806990"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.128.151:8089/root/mytest.git</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214233903631.png" alt="image-20250214233903631"></p><h3 id="先登录"><a href="#先登录" class="headerlink" title="先登录"></a>先登录</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214234028822.png" alt="image-20250214234028822"></p><p>generrate 跳转创建即可</p><h3 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214234208074.png" alt="image-20250214234208074"></p><h2 id="jenkins创建任务"><a href="#jenkins创建任务" class="headerlink" title="jenkins创建任务"></a>jenkins创建任务</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214234327992.png" alt="image-20250214234327992"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214234404578.png" alt="image-20250214234404578"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214234628546.png" alt="image-20250214234628546"></p><h3 id="jenkins构建就会拉取代码到docker"><a href="#jenkins构建就会拉取代码到docker" class="headerlink" title="jenkins构建就会拉取代码到docker"></a>jenkins构建就会拉取代码到docker</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214235138666.png" alt="image-20250214235138666"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250214235041915.png" alt="image-20250214235041915"></p><h2 id="配置maven构建"><a href="#配置maven构建" class="headerlink" title="配置maven构建"></a>配置maven构建</h2><h3 id="安装这个Maven-Integration"><a href="#安装这个Maven-Integration" class="headerlink" title="安装这个Maven Integration"></a>安装这个Maven Integration</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215000037946.png" alt="image-20250215000037946"></p><h3 id="增加构建步骤"><a href="#增加构建步骤" class="headerlink" title="增加构建步骤"></a>增加构建步骤</h3><p>找到lnvoke top-level maven targets</p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215000704471.png" alt="image-20250215000704471"></p><p>clean package  -DskipTests</p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215000836498.png" alt="image-20250215000836498"></p><p>构建，第一次构建较长时间，需要下载maven依赖</p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215001051732.png" alt="image-20250215001051732"></p><h3 id="成功构建"><a href="#成功构建" class="headerlink" title="成功构建"></a>成功构建</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215003330864.png" alt="image-20250215003330864"></p><h2 id="添加构建后操作"><a href="#添加构建后操作" class="headerlink" title="添加构建后操作"></a>添加构建后操作</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215202244451.png" alt="image-20250215202244451"></p><h3 id="设置把jar文件拷贝过来"><a href="#设置把jar文件拷贝过来" class="headerlink" title="设置把jar文件拷贝过来"></a>设置把jar文件拷贝过来</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215202423499.png" alt="image-20250215202423499"></p><h3 id="先前设置的拷贝的机器和目录"><a href="#先前设置的拷贝的机器和目录" class="headerlink" title="先前设置的拷贝的机器和目录"></a>先前设置的拷贝的机器和目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.128.152</span><br><span class="line">/usr/local/test/</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215202654109.png" alt="image-20250215202654109"></p><h3 id="再次构建，成功拷贝文件"><a href="#再次构建，成功拷贝文件" class="headerlink" title="再次构建，成功拷贝文件"></a>再次构建，成功拷贝文件</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215203001810.png" alt="image-20250215203001810"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215203033916.png" alt="image-20250215203033916"></p><h3 id="运行jar文件"><a href="#运行jar文件" class="headerlink" title="运行jar文件"></a>运行jar文件</h3><h4 id="创建docker目录和文件"><a href="#创建docker目录和文件" class="headerlink" title="创建docker目录和文件"></a>创建docker目录和文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Dockerfile内容:</span><br><span class="line">FROM docker.1ms.run/bitnami/java:21</span><br><span class="line">COPY mytest.jar /usr/local/</span><br><span class="line">WORKDIR /usr/local</span><br><span class="line">CMD java -jar mytest.jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker-compose.yml内容：</span><br><span class="line">services:</span><br><span class="line">  mytest:</span><br><span class="line">    build:</span><br><span class="line">      context: ./</span><br><span class="line">      dockerfile: Dockerfile</span><br><span class="line">    image: mytest:v1.0.0</span><br><span class="line">    container_name: mytest</span><br><span class="line">    ports:</span><br><span class="line">     - 8081:8080</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215211848531.png" alt="image-20250215211848531"></p><h4 id="推送构建"><a href="#推送构建" class="headerlink" title="推送构建"></a>推送构建</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .# 添加解决后的文件到暂存区</span><br><span class="line">git commit -m &quot;my 5555 commit&quot;# 提交解决后的更改</span><br><span class="line">git push -u origin master#推送更改</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215212055332.png" alt="image-20250215212055332"></p><h4 id="追加命令"><a href="#追加命令" class="headerlink" title="追加命令"></a>追加命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">target/*.jar docker/*</span><br><span class="line"></span><br><span class="line">cd /usr/local/test/docker</span><br><span class="line">mv ../target/*.jar ./</span><br><span class="line">docker-compose down</span><br><span class="line">docker-compose up -d --build</span><br><span class="line">docker image  prune -f    #删除none标记的镜像</span><br><span class="line"></span><br><span class="line">先下好java镜像，速度比较快</span><br><span class="line">docker pull docker.1ms.run/bitnami/java:21</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215222655118.png" alt="image-20250215222655118"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215222737596.png" alt="image-20250215222737596"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215222750793.png" alt="image-20250215222750793"></p><h2 id="成功构建运行"><a href="#成功构建运行" class="headerlink" title="成功构建运行"></a>成功构建运行</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215222821508.png" alt="image-20250215222821508"></p><h1 id="基于tag标签拉取构建"><a href="#基于tag标签拉取构建" class="headerlink" title="基于tag标签拉取构建"></a>基于tag标签拉取构建</h1><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215225405936.png" alt="image-20250215225405936"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215225519581.png" alt="image-20250215225519581"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215225613150.png" alt="image-20250215225613150"></p><h2 id="拖到maven前面"><a href="#拖到maven前面" class="headerlink" title="拖到maven前面"></a>拖到maven前面</h2><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215225748752.png" alt="image-20250215225748752"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout $tag</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215225848584.png" alt="image-20250215225848584"></p><h3 id="gitlab打标签"><a href="#gitlab打标签" class="headerlink" title="gitlab打标签"></a>gitlab打标签</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230033207.png" alt="image-20250215230033207"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230119520.png" alt="image-20250215230119520"></p><h3 id="重新做一个v2-0-0-push"><a href="#重新做一个v2-0-0-push" class="headerlink" title="重新做一个v2.0.0 push"></a>重新做一个v2.0.0 push</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .# 添加解决后的文件到暂存区</span><br><span class="line">git commit -m &quot;my v2.0.0 commit&quot;# 提交解决后的更改</span><br><span class="line">git push -u origin master#推送更改</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230303233.png" alt="image-20250215230303233"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230836741.png" alt="image-20250215230836741"></p><h3 id="jenkins构建发生变化"><a href="#jenkins构建发生变化" class="headerlink" title="jenkins构建发生变化"></a>jenkins构建发生变化</h3><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230548351.png" alt="image-20250215230548351"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230608741.png" alt="image-20250215230608741"></p><h4 id="成功运行"><a href="#成功运行" class="headerlink" title="成功运行"></a>成功运行</h4><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230904411.png" alt="image-20250215230904411"></p><p><img src="/Post-Asset-Folder/jenkins-CI.assets/image-20250215230720067.png" alt="image-20250215230720067"></p>]]></content>
      
      
      <categories>
          
          <category> DevOps环境搭建 </category>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> docker </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker命令</title>
      <link href="/2025/03/08/docker%E5%91%BD%E4%BB%A4/"/>
      <url>/2025/03/08/docker%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><h2 id="安装-Docker-Compose"><a href="#安装-Docker-Compose" class="headerlink" title="安装 Docker-Compose"></a>安装 Docker-Compose</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h2 id="Docker-设置国内镜像源"><a href="#Docker-设置国内镜像源" class="headerlink" title="Docker 设置国内镜像源"></a>Docker 设置国内镜像源</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://docker.1ms.run&quot;,</span><br><span class="line">  &quot;https://hub.rat.dev&quot;,</span><br><span class="line">&quot;https://docker.1panel.live&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="命令："><a href="#命令：" class="headerlink" title="命令："></a>命令：</h2><ul><li><p>docker images</p></li><li><p>docker ps -q 列出所有运行中容器的ID。</p></li><li><p>docker stop 停止一个或多个运行中的容器。</p></li><li><p>docker rm 移除一个或docker rmi多个容器。</p></li><li><p>docker rm 删除容器</p></li><li><p>docker rmi 删除镜像</p></li><li><p>删除所有容器 docker rm -f  $(docker ps -a -q)   </p></li><li><p>启动 docker-compose -p xxx up -d</p></li></ul><p>停止所有运行中的Docker容器，可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q) </span><br></pre></td></tr></table></figure><p>如果你想要同时停止并移除这些容器，可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker stop $(docker ps -a -q))  </span><br></pre></td></tr></table></figure><p>这将列出所有活动的容器，包括容器ID、创建时间、状态和其他相关信息。</p><p>如果你想查看所有容器，无论它们的状态如何（运行、停止等），可以使用 <code>-a</code> 或 <code>--all</code> 选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a </span><br></pre></td></tr></table></figure><p>如果你只想获取容器ID，可以使用<code>--format</code>来定制输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -q</span><br></pre></td></tr></table></figure><h2 id="指定端口启动创建进入容器"><a href="#指定端口启动创建进入容器" class="headerlink" title="指定端口启动创建进入容器"></a>指定端口启动创建进入容器</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9992:80 -p 8882:8888 -it ubuntu /bin/bash</span><br><span class="line">docker run --name web1 -p 9991:80 -p 8881:8888 -it centos /bin/bash</span><br></pre></td></tr></table></figure><h2 id="导出导入镜像"><a href="#导出导入镜像" class="headerlink" title="导出导入镜像"></a>导出导入镜像</h2><p>export\import 导入导出</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker export web &gt; /home/docker_web.tar</span><br><span class="line">docker import /home/docker_web.tar</span><br></pre></td></tr></table></figure><p>save\load 导入导出</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save 9610cfc68e8d &gt; /home/docker_web.tar</span><br><span class="line">docker load &lt; /home/docker_web.tar</span><br></pre></td></tr></table></figure><p>export\import 与 save\load 的区别：</p><ul><li>export\import 导出的镜像文件大小要小于 save\load 导出的镜像</li><li>export\import 是根据容器拿到的镜像，再导入时会丢失镜像所有的历史，所以无法进行回滚操作；而 save\load 的镜像，没有丢失镜像的历史，可以回滚到之前的层。</li></ul><p>核心原因是 export 是针对容器的导出，所以只有所有层组合的最终版本；而 save 则是针对镜像的，所以可以看到每一层的信息。</p><h2 id="端口占用"><a href="#端口占用" class="headerlink" title="端口占用"></a>端口占用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker stop $(docker ps -a -q))  </span><br><span class="line">sudo rm /var/lib/docker/network/files/local-kv.db</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h2><p>docker ps -a</p><p>查看容器详细信息</p><p>docker inspect d8f56b49b</p><p>查看容器的实时日志</p><p>docker logs -f d8f56b49b</p><p> docker exec -u www-data -it d8f56b49b &#x2F;bin&#x2F;bash</p><p>systemctl status docker</p><p>修改镜像名字<br>docker tag <image-id> xxx:1.8.3</p><h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker cp 本地文件路径 ID全称:容器路径</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line"></span><br><span class="line">docker cp ID全称:容器文件路径 本地路径</span><br></pre></td></tr></table></figure><h2 id="Docker-资源清理"><a href="#Docker-资源清理" class="headerlink" title="Docker 资源清理"></a>Docker 资源清理</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker container prune# 删除所有退出状态的容器</span><br><span class="line">docker image prune# 删除 dangling 或所有未被使用的镜像</span><br><span class="line">docker network prune# 删除所有未使用的网络</span><br><span class="line">docker volume prune# 删除未被使用的数据卷</span><br><span class="line">docker system prune# 删除已停止的容器、dangling 镜像、未被容器引用的 network 和构建过程中的 cache，安全起见，这个命令默认不会删除那些未被任何容器引用的数据卷，如果需要同时删除这些数据卷，你需要显式的指定 --volumns 参数</span><br><span class="line">docker system prune --all --force --volumns # 这次不仅会删除数据卷，而且连确认的过程都没有了！注意，使用 --all 参数后会删除所有未被引用的镜像而不仅仅是 dangling 镜像</span><br></pre></td></tr></table></figure><h2 id="卸载Docker"><a href="#卸载Docker" class="headerlink" title="卸载Docker"></a>卸载Docker</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep docker</span><br><span class="line">yum -y remove docker.x86_64</span><br></pre></td></tr></table></figure><h2 id="卸载Docker-compose"><a href="#卸载Docker-compose" class="headerlink" title="卸载Docker-compose"></a>卸载Docker-compose</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云安全 </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打包绿色免安装程序</title>
      <link href="/2025/03/08/%E6%89%93%E5%8C%85%E7%BB%BF%E8%89%B2%E5%85%8D%E5%AE%89%E8%A3%85%E5%8C%85/"/>
      <url>/2025/03/08/%E6%89%93%E5%8C%85%E7%BB%BF%E8%89%B2%E5%85%8D%E5%AE%89%E8%A3%85%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p><strong>下载enigma virtual box</strong></p><p><a href="https://www.enigmaprotector.com/en/downloads.html">https://www.enigmaprotector.com/en/downloads.html</a></p><p>enigmavb.exe</p><p>1、文件选项：</p><p>文件-增加-增加文件夹([递归)(X)</p><p>文件夹选项-勾选启用文件虚拟化，压缩文件</p><p>2、注册表：</p><p>注册表选项-勾选启用注册表虚拟化</p><p>3、最后执行封包</p><p>参考：</p><p><a href="https://www.bilibili.com/video/BV1sP41197A9/?vd_source=4efa777d46268bbd7644334c25d41159">https://www.bilibili.com/video/BV1sP41197A9/?vd_source=4efa777d46268bbd7644334c25d41159</a></p>]]></content>
      
      
      <categories>
          
          <category> TOOLS </category>
          
          <category> Proskill </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Proskill </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云镜像服务</title>
      <link href="/2025/03/08/%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1/"/>
      <url>/2025/03/08/%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="私有需要认证"><a href="#私有需要认证" class="headerlink" title="私有需要认证"></a>私有需要认证</h1><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances">https://cr.console.aliyun.com/cn-hangzhou/instances</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker login --username=r_r_r_r crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/redis:7.4.1</span><br></pre></td></tr></table></figure><h2 id="docker修改镜像名称"><a href="#docker修改镜像名称" class="headerlink" title="docker修改镜像名称"></a>docker修改镜像名称</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]</span><br><span class="line">docker tag crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/redis:7.4.1  redis:7.4.1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1.assets/image-20250213223419561.png" alt="image-20250213223419561"></p><p>此时生成新的，需要删除旧的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/redis:7.4.1</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1.assets/image-20250213223552555.png" alt="image-20250213223552555"></p><h1 id="公开则不需要认证"><a href="#公开则不需要认证" class="headerlink" title="公开则不需要认证"></a>公开则不需要认证</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com</span><br></pre></td></tr></table></figure><p>ALIYUN_REGISTRY_PASSWORD&#x3D;Aliyunxxxxxxxxx</p><h1 id="上传push到阿里云"><a href="#上传push到阿里云" class="headerlink" title="上传push到阿里云"></a>上传push到阿里云</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker login --username=r_r_r_r crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com</span><br><span class="line"></span><br><span class="line">docker tag d2fa7cd1de2b crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/java:21</span><br><span class="line"></span><br><span class="line">docker push crpi-oep0r0ys6k2kecir.cn-guangzhou.personal.cr.aliyuncs.com/netimages/java:21</span><br></pre></td></tr></table></figure><h3 id="需要确保阿里云实例命名空间开启"><a href="#需要确保阿里云实例命名空间开启" class="headerlink" title="需要确保阿里云实例命名空间开启"></a>需要确保阿里云实例命名空间开启</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">报错：</span><br><span class="line">denied: requested access to the resource is denied</span><br></pre></td></tr></table></figure><p><img src="/Post-Asset-Folder/%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%9C%8D%E5%8A%A1.assets/image-20250215224640359.png" alt="image-20250215224640359"></p>]]></content>
      
      
      <categories>
          
          <category> 云安全 </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
